{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "App.svelte",
    "HowTo.svelte",
    "ProgressBar.svelte",
    "Timer.svelte",
    "Timer2Tween.svelte"
  ],
  "sourcesContent": [
    "<script>\n  import HowTo from \"./HowTo.svelte\";\n  import Timer from \"./Timer.svelte\";\n  import Timer2Tween from \"./Timer2Tween.svelte\";\n\n  let audio;\n  function timerEnds() {\n    audio.play();\n  }\n</script>\n\n<style>\n  h1,\n  h3 {\n    text-align: center;\n  }\n</style>\n\n<h1>Handwashing App (Store & Tweened Async Progress Bar Version)</h1>\n<Timer2Tween on:end={timerEnds} />\n<HowTo />\n\n<h1>Handwashing App (Original Tutorial Version)</h1>\n<Timer on:end={timerEnds} />\n<HowTo />\n<h3>\n  <a href=\"https://www.who.int/gpsc/clean_hands_protection/en/\">\n    Picture Source\n  </a>\n\n  <a href=\"https://freesound.org/people/metrostock99/sounds/345086/ \">\n    Sound Source\n  </a>\n</h3>\n<audio bind:this={audio}>\n  <track kind=\"captions\" />\n  <source src=\"sound.wav\" />\n</audio>\n",
    "<style>\n  img {\n    max-width: 100%;\n    width: 100%;\n  }\n</style>\n\n<div bp=\"grid\">\n  <img\n    bp=\"offset-5@md 4@md 12@sm\"\n    src=\"handwashing.gif\"\n    alt=\"How to wash your hands.\" />\n</div>\n",
    "<script>\n  export let progress = 0;\n</script>\n\n<style>\n  .progress-container {\n    margin: 20px 0;\n    border: solid rgb(194, 194, 194) 1px;\n  }\n\n  .progress-bar {\n    height: 30px;\n    background-color: rgb(77, 199, 55);\n  }\n</style>\n\n<div bp=\"grid\">\n  <div class=\"progress-container\" bp=\"offset-5@md 4@md 12@sm\">\n    <div class=\"progress-bar\" style=\"width: {progress}%;\">\n      <span class=\"sr-only\">%{progress}</span>\n    </div>\n  </div>\n</div>\n",
    "<script>\n  import { createEventDispatcher } from \"svelte\";\n  import ProgressBar from \"./ProgressBar.svelte\";\n\n  /* vars */\n  const totalSeconds = 3;\n  let secondsLeft = totalSeconds;\n  let isRunning = false;\n  $: progress = ((totalSeconds - secondsLeft) / totalSeconds) * 100;\n  const dispatch = createEventDispatcher();\n\n  /* funcs */\n  function startTimer() {\n    isRunning = true;\n    const timer = setInterval(() => {\n      secondsLeft -= 1;\n      if (secondsLeft == 0) {\n        clearInterval(timer);\n        isRunning = false;\n        secondsLeft = totalSeconds;\n        dispatch(\"end\");\n        console.log(\"Timer1 Complete\");\n      }\n    }, 1000);\n  }\n</script>\n\n<style>\n  h2 {\n    margin: 0;\n  }\n  .start {\n    background-color: rgb(154, 73, 73);\n    width: 100%;\n    margin: 10px 0;\n  }\n  .start[disabled] {\n    background-color: rgb(194, 194, 194);\n    cursor: not-allowed;\n  }\n</style>\n\n<div bp=\"grid\">\n  <h2 bp=\"offset-5@md 4@md 12@sm\">Seconds Left: {secondsLeft}</h2>\n</div>\n\n<ProgressBar {progress} />\n\n<div bp=\"grid\">\n  <button\n    disabled={isRunning}\n    on:click={startTimer}\n    bp=\"offset-5@md 4@md 12@sm\"\n    class=\"start\">\n    Start\n  </button>\n</div>\n",
    "<script>\n  import { createEventDispatcher } from \"svelte\";\n\n  import { tweened } from \"svelte/motion\";\n  import { cubicOut } from \"svelte/easing\";\n\n  /* For talking to the parent App.svelte */\n  const dispatch = createEventDispatcher();\n\n  // track whether the timer is in progress\n  let isRunning = false;\n  let paused = false;\n  let resetDuration = 400;\n  // seconds for the timer\n  let seconds = 2;\n\n  // We make this reactive($:) because when `seconds` changes, this needs to\n  // recompute.\n  $: milliseconds = seconds * 1000;\n\n  // Tying the duration to `milliseconds` and making the assignment reactive\n  // ($:) allows to change value\n  $: progressStore = tweened(seconds, {\n    duration: milliseconds,\n  });\n\n  // set progress to 0 (tweening for the period computed in the milliseconds variable).\n  async function start() {\n    paused = false;\n    isRunning = true;\n    await progressStore.set(0);\n    // then, when timer reaches 0\n    progressStore.set(seconds, { duration: resetDuration, easing: cubicOut });\n    isRunning = false;\n    console.log(\"Timer2 Complete\");\n    dispatch(\"end\");\n  }\n\n  function stop() {\n    paused = false;\n    isRunning = false;\n    progressStore.set(seconds, { duration: resetDuration, easing: cubicOut });\n  }\n\n  function pause() {\n    if (paused) {\n      start();\n    } else {\n      paused = true;\n      progressStore.set($progressStore, {\n        duration: resetDuration,\n        easing: cubicOut,\n      });\n    }\n  }\n</script>\n\n<style>\n  button {\n    color: white;\n    background-color: rgb(22, 55, 33);\n    height: 3rem;\n    width: 100%;\n    margin: 10px 0;\n    padding: 5px 5px;\n  }\n\n  button:hover {\n    background-color: rgb(66, 120, 88);\n    width: 100%;\n  }\n\n  progress,\n  input {\n    display: block;\n    width: 100%;\n  }\n</style>\n\n<div bp=\"grid\">\n  <h2 bp=\"offset-5@md 4@md 12@sm\">\n    Seconds Left:\n    {$progressStore < 10 ? `0${Math.floor($progressStore)}` : `${Math.floor($progressStore)}`}\n  </h2>\n</div>\n\n<div bp=\"grid\">\n  <div class=\"progress-container\" bp=\"offset-5@md 4@md 12@sm\">\n    <progress value={$progressStore} min=\"0\" max={seconds} />\n    <input\n      type=\"range\"\n      bind:value={seconds}\n      on:change={stop}\n      min=\"1\"\n      max=\"60\" />\n  </div>\n</div>\n\n<div bp=\"grid\">\n  {#if !isRunning || paused}\n    <button bp=\"offset-5@md 4@md 12@sm\" on:click={start}>⏱ Start</button>\n  {:else}\n    <button bp=\"offset-5@md 4@md 12@sm\" on:click={pause}>⏸ Pause</button>\n  {/if}\n  <button bp=\"offset-5@md 4@md 12@sm\" on:click={stop}>♻ Reset</button>\n</div>\n"
  ],
  "names": [],
  "mappings": "AAYE,gBAAE,CACF,EAAE,cAAC,CAAC,AACF,UAAU,CAAE,MAAM,AACpB,CAAC;ACdD,GAAG,eAAC,CAAC,AACH,SAAS,CAAE,IAAI,CACf,KAAK,CAAE,IAAI,AACb,CAAC;ACCD,mBAAmB,cAAC,CAAC,AACnB,MAAM,CAAE,IAAI,CAAC,CAAC,CACd,MAAM,CAAE,KAAK,CAAC,IAAI,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,AACtC,CAAC,AAED,aAAa,cAAC,CAAC,AACb,MAAM,CAAE,IAAI,CACZ,gBAAgB,CAAE,IAAI,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,AACpC,CAAC;ACeD,EAAE,eAAC,CAAC,AACF,MAAM,CAAE,CAAC,AACX,CAAC,AACD,MAAM,eAAC,CAAC,AACN,gBAAgB,CAAE,IAAI,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAClC,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,IAAI,CAAC,CAAC,AAChB,CAAC,AACD,MAAM,CAAC,QAAQ,CAAC,eAAC,CAAC,AAChB,gBAAgB,CAAE,IAAI,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CACpC,MAAM,CAAE,WAAW,AACrB,CAAC;ACmBD,MAAM,cAAC,CAAC,AACN,KAAK,CAAE,KAAK,CACZ,gBAAgB,CAAE,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CACjC,MAAM,CAAE,IAAI,CACZ,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,IAAI,CAAC,CAAC,CACd,OAAO,CAAE,GAAG,CAAC,GAAG,AAClB,CAAC,AAED,oBAAM,MAAM,AAAC,CAAC,AACZ,gBAAgB,CAAE,IAAI,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAClC,KAAK,CAAE,IAAI,AACb,CAAC,AAED,sBAAQ,CACR,KAAK,cAAC,CAAC,AACL,OAAO,CAAE,KAAK,CACd,KAAK,CAAE,IAAI,AACb,CAAC"
}